Fast File Encryption
====================

**Fast File Encryption** is a lightweight, robust, and developer-friendly solution for encrypting large files‚Äîranging from a few megabytes to several terabytes‚Äîsecurely and efficiently.

Ideal for environments that require:

- Minimal runtime dependencies
- Strong asymmetric encryption using RSA
- High performance for both small and large files

Features
--------

- Requires only Python ‚â• 3.11 and the ``cryptography`` package
- Securely encrypts and decrypts files using RSA public/private key pairs
- Only the **public key** is needed on the server‚Äîno private key exposure
- Supports streaming and large file encryption (up to 10 TB and beyond)

Getting Started üöÄ
------------------

New to the project? Start with our step-by-step **Getting Started Guide**. It walks you through installation, key generation, and your first file encryption.

‚ñ∂Ô∏è `Getting Started <https://erbsland-dev.github.io/fast-file-encryption/chapters/get-started.html>`_

Documentation üìö
----------------

Explore the full documentation:

* In-depth reference for encryption and decryption classes
* Key management tools and utilities
* Technical details of the file format

‚ñ∂Ô∏è `Reference Manual <https://erbsland-dev.github.io/fast-file-encryption/chapters/reference/>`_

‚ñ∂Ô∏è `File Format Specification <https://erbsland-dev.github.io/fast-file-encryption/format.html>`_

Requirements
------------

* Python ‚â• 3.11
* `cryptography` package (based on OpenSSL)

Running the Tests
-----------------

Install the dependencies from ``requirements.txt`` and execute ``pytest`` from
the project root::

    pip install -r requirements.txt
    pytest

Project Goals
-------------

**Fast File Encryption** is built with the following principles:

* **Archive Data** ‚Äî Designed to securely archive files.
* **Secure by Default** ‚Äî No configurable options that weaken encryption.
* **Large File Support** ‚Äî Optimized for files up to several terabytes.
* **Metadata Block** ‚Äî Clean separation of encrypted metadata.
* **No Key = No Access** ‚Äî Data remains safe even if a server is compromised.
* **Corruption Detection** ‚Äî Built-in checksums detect silent corruption.

‚ñ∂Ô∏è `More about our design goals <https://erbsland-dev.github.io/fast-file-encryption/goals.html>`_

Bug Reports & Feature Requests
------------------------------

Have feedback or ideas? Found a bug? We'd love to hear from you.

‚ñ∂Ô∏è `Submit an Issue <https://github.com/erbsland-dev/fast-file-encryption/issues>`_

License
-------

Copyright ¬© 2021‚Äì2024
Tobias Erbsland ‚Äì https://erbsland.dev/
EducateIT GmbH ‚Äì https://educateit.ch/

Licensed under the **Apache License, Version 2.0**.

You may obtain a copy of the license at:

http://www.apache.org/licenses/LICENSE-2.0

Distributed on an ‚ÄúAS IS‚Äù basis, without warranties or conditions of any kind. See the LICENSE file for details.
